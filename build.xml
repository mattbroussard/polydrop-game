<?xml version="1.0" encoding="UTF-8"?>
<project name="PolyDrop" default="default" basedir="." xmlns:if="ant:if" xmlns:unless="ant:unless">

	<!-- load version from VERSION file. Used for Mac/Windows build artifacts. -->
	<loadfile property="version" srcFile="VERSION" />
	<tstamp>
		<format property="version_timestamp" pattern="yyyyMMddHHmm" />
	</tstamp>
	
	<!-- the location of a JRE for bundling can be specified with `ant -Djavahome=[jre location] [target]`. -->
	<!-- if one isn't specified, try getting it from $JAVA_HOME or /usr/libexec/java_home (on Mac) -->
	<sequential unless:set="javahome">
		<available file="/usr/libexec/java_home" property="java_home_available"/>
		<property environment="env"/>
		<exec if:set="java_home_available" executable="/usr/libexec/java_home" outputproperty="javahome" />
		<property unless:set="java_home_available" name="javahome" value="${env.JAVA_HOME}" />
	</sequential>
	<!-- note: using sequential here is a bit of a hack to avoid having to use ant-contrib's if/then/else -->

	<!-- default target, just compiles everything -->
	<target name="default">
		<delete file="res/BUILD_VERSION" />
		<echo file="res/BUILD_VERSION" message="${version}.${version_timestamp}" />
		<javac
			srcdir="src/"
			destdir="classes/"
			classpath="lib/leapJava.jar:lib/jbox2d-library-2.2.1.1.jar"
			includeantruntime="no" />
	</target>

	<!-- removes previously created build artifacts -->
	<target name="clean">
		<delete includeEmptyDirs="true">
			<fileset dir="classes/" includes="**/*" excludes=".empty" defaultexcludes="no"/>
		</delete>
		<delete file="distrib/${version}/PolyDrop.jar" />
		<delete file="res/BUILD_VERSION" />
	</target>

	<!-- removes previously created Mac artifacts -->
	<target name="clean-mac">
		<delete includeEmptyDirs="true" dir="distrib/${version}/Mac" />
	</target>

	<!-- removes previously created Windows artifacts -->
	<target name="clean-win">
		<delete includeEmptyDirs="true" dir="distrib/${version}/Windows" />
	</target>

	<!-- removes previously created Airspace artifacts -->
	<target name="clean-airspace">
		<delete includeEmptyDirs="true" dir="distrib/${version}/Airspace" />
	</target>

	<!-- runs already-compiled classfiles with specified command-line arguments -->
	<target name="execute">
		<java
			classpath="res:classes:lib/leapJava.jar:lib/jbox2d-library-2.2.1.1.jar"
			classname="Main"
			fork="yes" >
			<sysproperty key="java.library.path" path="lib/"/>
			<arg line="${args}" />
		</java>
	</target>

	<!-- runs already-compiled classfiles with FPS counter visible for debugging -->
	<target name="run">
		<property name="args" value="--fps" />
		<antcall target="execute" />
	</target>

	<!-- cleans, builds, and runs compiled classfiles -->
	<target name="go">
		<antcall target="default" />
		<antcall target="run" />
	</target>

	<!-- runs the already-compiled classfiles with windowed option -->
	<target name="windowed">
		<property name="args" value="--fps --windowed" />
		<antcall target="execute" />
	</target>

	<!-- creates a jar with
	      - the contents of LeapJava.jar
	      - the contents of jbox2d-library-2.2.1.1.jar
	      - all PolyDrop class files
	      - all PolyDrop resources (images and sounds)
	      - META-INF folder containing jar manifest
	-->
	<target name="jar">
		<jar
			destfile="distrib/${version}/PolyDrop.jar"
			manifest="META-INF/MANIFEST.MF"
			>
			<fileset dir="classes" includes="*.class" />
			<fileset dir="res" includes="**/*" />
			<zipfileset src="lib/LeapJava.jar">
				<exclude name="META-INF/*" />
			</zipfileset>
			<zipfileset src="lib/jbox2d-library-2.2.1.1.jar">
				<exclude name="META-INF/*" />
				<exclude name="META-INF/maven" />
			</zipfileset>
		</jar>
	</target>

	<!-- runs the already-compiled classfiles with no options -->
	<target name="demo">
		<antcall target="execute" />
	</target>

	<!-- generates a mac bundle -->
	<target name="mac">
		
		<!-- taskdef for AppBundler -->
		<taskdef name="bundleapp"
			 classname="com.oracle.appbundler.AppBundlerTask"
			 classpath="buildtools/appbundler-1.0.jar" />

		<antcall target="clean" />
		<antcall target="clean-mac" />
		<antcall target="default" />
		<antcall target="jar" />

		<!-- make distrib/Mac folder if it doesn't exist -->
		<mkdir dir="distrib/${version}/Mac" />

		<bundleapp
			outputdirectory="distrib/${version}/Mac/"
			name="PolyDrop"
			displayname="PolyDrop"
			identifier="name.mattb.polydrop"
			icon="icons/icon.icns"
			shortversion="${version}"
			applicationCategory="public.app-category.games"
			mainclassname="Main">
			<classpath file="distrib/${version}/PolyDrop.jar" />
			<librarypath dir="lib/" includes="libLeap.dylib, libLeapJava.dylib" />
			<runtime dir="${javahome}" if:set="includeJRE" />
		</bundleapp>

		<!-- this is a little ugly, but adds to Info.plist the necessary keys to support Retina and fullscreen mode on Mac -->
		<!-- do not change the indentation, you will break it -->
		<replace file="distrib/${version}/Mac/PolyDrop.app/Contents/Info.plist">
		  <replacetoken><![CDATA[</dict>
</plist>]]></replacetoken>
		  <replacevalue><![CDATA[<key>NSHighResolutionCapable</key>
<true/>
<key>LSUIPresentationMode</key>
<integer>3</integer>
</dict>
</plist>]]></replacevalue>
		</replace>

	</target>

	<!-- generates a mac bundle with embedded JRE -->
	<target name="mac-jre">
		<property name="includeJRE" value="true" />
		<antcall target="mac" />
	</target>

	<!-- generates a windows bundle -->
	<target name="win">

		<!-- taskdef for launch4j -->
		<taskdef name="launch4j"
			classname="net.sf.launch4j.ant.Launch4jTask"
			classpath="buildtools/launch4j/launch4j.jar:buildtools/launch4j/lib/xstream.jar" />

		<antcall target="clean" />
		<antcall target="clean-win" />
		<antcall target="default" />
		<antcall target="jar" />

		<!-- make distrib/Windows folder if it doesn't exist -->
		<mkdir dir="distrib/${version}/Windows" />
		
		<launch4j
			configFile="launch4j.xml"
			outfile="distrib/${version}/Windows/PolyDrop.exe"
			fileVersion="${version}.0"
			txtFileVersion="${version}.${version_timestamp}"
			productVersion="${version}.0"
			txtProductVersion="${version}.${version_timestamp}" />

		<mkdir if:set="includeJRE" dir="distrib/${version}/Windows/jre" />
		<copy if:set="includeJRE" todir="distrib/${version}/Windows/jre">
			<fileset dir="${javahome}" includes="**/*" />
		</copy>

		<copy file="distrib/${version}/PolyDrop.jar" todir="distrib/${version}/Windows/" />
		<copy todir="distrib/${version}/Windows">
			<fileset dir="lib/" includes="Leap.dll, LeapJava.dll" />
		</copy>

	</target>

	<!-- generates a windows bundle with embedded JRE -->
	<target name="win-jre">
		<property name="includeJRE" value="true" />
		<antcall target="win" />
	</target>

	<!-- generates files necessary for submission to Leap Motion Airspace store -->
	<!-- unfortunately this only works on Mac since it needs hdiutil to create a DMG -->
	<!-- targets mac-jre and win-jre must have already been built; one of them will need a custom JRE path for the foreign platform -->
	<target name="airspace">

		<antcall target="clean-airspace" />
		<mkdir dir="distrib/${version}/Airspace" />

		<mkdir dir="distrib/${version}/Airspace/PolyDrop" />
		<copy todir="distrib/${version}/Airspace/PolyDrop">
			<fileset dir="distrib/${version}/Windows" includes="**/*" />
		</copy>
		<move file="distrib/${version}/Airspace/PolyDrop/PolyDrop.exe" tofile="distrib/${version}/Airspace/PolyDrop/PolyDrop_LM.exe" />
		<zip destfile="distrib/${version}/Airspace/PolyDrop_LM_${version}_Windows.zip">
			<fileset dir="distrib/${version}/Airspace/PolyDrop" includes="**/*" />
		</zip>
		<delete dir="distrib/${version}/Airspace/PolyDrop" />

		<move file="distrib/${version}/Mac/PolyDrop.app" tofile="distrib/${version}/Mac/PolyDrop_LM.app" />
		<exec executable="hdiutil" failonerror="true">
			<arg line="create -srcfolder 'distrib/${version}/Mac' -volname 'PolyDrop_${version}' -fs HFS+ -fsargs '-c c=64,a=16,e=16' -format UDRW 'distrib/${version}/Airspace/PolyDrop_LM_${version}_OSX.dmg'"/>
		</exec>
		<move file="distrib/${version}/Mac/PolyDrop_LM.app" tofile="distrib/${version}/Mac/PolyDrop.app" />

	</target>

</project>